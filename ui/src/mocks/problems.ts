import { Problem, ProblemStatus } from '@/lib/types';

export const problemsMock: Array<Problem> = [
  {
    id: '1',
    status: ProblemStatus.TODO,
    title: 'Em busca do Ouro Branco',
    tags: ['array', 'pointer', 'eof', 'recursion'],
    difficulty: 'Difícil',
    slug: 'em-busca-do-ouro-branco',
  },
  {
    id: '2',
    status: ProblemStatus.TODO,
    title: 'Longest Substring Without Repeating Characters',
    tags: ['string', 'sliding window'],
    difficulty: 'Intermediário',
    slug: 'longest-substring-without-repeating-characters',
  },
  {
    id: '3',
    status: ProblemStatus.ERROR,
    title: 'Median of Two Sorted Arrays',
    tags: ['array', 'binary search', 'eof', 'pointer'],
    difficulty: 'Muito Difícil',
    slug: 'median-of-two-sorted-arrays',
  },
  {
    id: '4',
    status: ProblemStatus.ERROR,
    title: 'Valid Parentheses',
    tags: ['stack', 'string'],
    difficulty: 'Muito Fácil',
    slug: 'valid-parentheses',
  },
  {
    id: '5',
    status: ProblemStatus.DONE,
    title: 'Merge Intervals',
    tags: ['array', 'sorting'],
    difficulty: 'Intermediário',
    slug: 'merge-intervals',
  },
  {
    id: '6',
    status: ProblemStatus.TODO,
    title: 'Two Sum',
    tags: ['array', 'hashmap', 'recursion'],
    difficulty: 'Fácil',
    slug: 'two-sum',
  },
  {
    id: '7',
    status: ProblemStatus.TODO,
    title: 'Reverse Linked List',
    tags: ['linked list', 'recursion'],
    difficulty: 'Fácil',
    slug: 'reverse-linked-list',
  },
  {
    id: '8',
    status: ProblemStatus.DONE,
    title: 'Find Minimum in Rotated Sorted Array',
    tags: ['array', 'binary search'],
    difficulty: 'Difícil',
    slug: 'find-minimum-in-rotated-sorted-array',
  },
  {
    id: '9',
    status: ProblemStatus.ERROR,
    title: 'Word Ladder',
    tags: ['graph', 'bfs'],
    difficulty: 'Muito Difícil',
    slug: 'word-ladder',
  },
  {
    id: '10',
    status: ProblemStatus.TODO,
    title: 'Course Schedule',
    tags: ['graph', 'topological sort'],
    difficulty: 'Intermediário',
    slug: 'course-schedule',
  },
  {
    id: '11',
    status: ProblemStatus.DONE,
    title: 'Climbing Stairs',
    tags: ['dynamic programming'],
    difficulty: 'Muito Fácil',
    slug: 'climbing-stairs',
  },
  {
    id: '12',
    status: ProblemStatus.ERROR,
    title: 'Trapping Rain Water',
    tags: ['array', 'two pointers'],
    difficulty: 'Muito Fácil',
    slug: 'trapping-rain-water',
  },
];

export const tagsMock = Array.from(
  new Set(problemsMock.flatMap((problem) => problem.tags)),
);
