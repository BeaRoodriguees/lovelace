services:
  pgsql:
    image: postgres:14-alpine
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432"
    networks:
      - lovelace-network
  
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile.prod
    ports:
      - "8000"
    depends_on:
      pgsql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ENV=production
    networks:
      - lovelace-network
  
  ui:
    build:
      context: .
      dockerfile: ./ui/Dockerfile.prod
    ports:
      - "3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    networks:
      - lovelace-network

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - api
      - ui
    networks:
      - lovelace-network

volumes:
  pgdata_prod:
networks:
  lovelace-network:
    driver: bridge